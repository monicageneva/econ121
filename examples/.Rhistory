index <- sample(n = 1:length(nfhs$clustnum),size = length(nfhs$clustnum),replace=TRUE)
length(nfhs$clustnum)
index <- sample(1:length(nfhs$clustnum), length(nfhs$clustnum), replace=TRUE)
aa <- nfhs$clustnum[index]
bb <- table(aa)
lm(assets ~ age*male,data = nfhs)
ratio
m <- lm(assets ~ age*male,data = nfhs)
ratio(m)
m <- lm(assets ~ age*rural,data = nfhs)
ratio(m)
bb <- table(nfhs$clustnum[index])
ratio(lm(assets ~ age*rural,data = nfhs))
library(haven)
nfhs_raw <- read_dta("https://github.com/tvogl/econ121/raw/main/data/nfhs4.dta")
cps18 <- read_dta("https://github.com/tvogl/econ121/raw/main/data/cps_18.dta")
summary(cps18)
table(cps18$race)
table(cps18$sex)
cps18$white <- ifelse(cps18$race == 1)
cps18$white <- ifelse(cps18$race == 1, 1, 0)
table(cps18$white)
cps18$white <- ifelse(cps18$race == '1', 1, 0)
cps18$white <- ifelse(cps18$race == 100, 1, 0)
table(cps18$white)
table(cps18$sex) #1 is male, 2 is female
cps18$white <- ifelse(cps18$race == 100, 1, 0)
cps18$black <- ifelse(cps18$race == 200, 1, 0)
cps18$male <- ifelse(cps18$sex == 1, 1, 0)
cps18$female <- ifelse(cps18$sex == 2, 1, 0)
cps18$lninc <- log(incwage)
cps18$lninc <- log(cps18incwage)
summary(cps18)
table(cps18$uhrsworkt) #100 is white, 200 is black
prop.table(cps18$uhrsworkt)
table_hrs <- table(cps18$uhrsworkt) #100 is white, 200 is black
prop.table(table_hrs) #report table with proportions instead of freq
prop.table(table_hrs)*100 #report table with proportions instead of freq
ps18_raw <- read_dta("https://github.com/tvogl/econ121/raw/main/data/cps_18.dta")
summary(cps18_raw)
# tables of race and sex - note: Stata labels have been removed
table(cps18_raw$race) #100 is white, 200 is black
table(cps18_raw$sex) #1 is male, 2 is female
# from the summary() results above, we know incwage has many 0s.
# over 25% of sample has 0s! restrict to workers who work 40+ hrs/wk.
table(cps18$uhrsworkt) #997 and 999 are top codes
cps18 <- cpw_raw[which(cps_raw$uhrsworkt >= 40 & cps_raw$uhrsworkt <= 170),]
rm(list=ls())
cps18 <- cpw_raw[which(cps_raw$uhrsworkt >= 40 & cps_raw$uhrsworkt <= 170),]
cps18 <- cpw_raw[which(cps_raw$uhrsworkt >= 40 & cps_raw$uhrsworkt <= 170),]
# this do-file studies the relationship or gender, race, and age
# with income in the united states, using the current population
# survey. it relies on nonparametric estimators.
# I will focus only on Black-white differences. If you are
# in other racial/ethnic groups, I encourage you to modify
# the do file in your spare time.
# input Stata file
library(haven)
cps18_raw <- read_dta("https://github.com/tvogl/econ121/raw/main/data/cps_18.dta")
summary(cps18_raw)
# tables of race and sex - note: Stata labels have been removed
table(cps18_raw$race) #100 is white, 200 is black
table(cps18_raw$sex) #1 is male, 2 is female
# from the summary() results above, we know incwage has many 0s.
# over 25% of sample has 0s! restrict to workers who work 40+ hrs/wk.
table(cps18$uhrsworkt) #997 and 999 are top codes
cps18 <- cpw_raw[which(cps_raw$uhrsworkt >= 40 & cps_raw$uhrsworkt <= 170),]
# cps18 is our analysis dataset, excluding people who work < 40 hours and
# people who are missing hours data
# generate white, black, male, female, log income (not hourly)
cps18$white <- ifelse(cps18$race == 100, 1, 0)
cps18$black <- ifelse(cps18$race == 200, 1, 0)
cps18$male <- ifelse(cps18$sex == 1, 1, 0)
cps18$female <- ifelse(cps18$sex == 2, 1, 0)
cps18$lninc <- log(cps18incwage)
cps18 <- cps_raw[which(cps_raw$uhrsworkt >= 40 & cps_raw$uhrsworkt <= 170),]
cps18 <- cps18_raw[which(cps18_raw$uhrsworkt >= 40 & cps18_raw$uhrsworkt <= 170),]
cps18$white <- ifelse(cps18$race == 100, 1, 0)
cps18$black <- ifelse(cps18$race == 200, 1, 0)
cps18$male <- ifelse(cps18$sex == 1, 1, 0)
cps18$female <- ifelse(cps18$sex == 2, 1, 0)
cps18$lninc <- log(cps18$incwage)
sd(cps18$lninc,na.rm=TRUE)
cps18_raw <- read_dta("https://github.com/tvogl/econ121/raw/main/data/cps_18.dta")
cps18 <- cps18_raw[which(cps18_raw$uhrsworkt >= 40 & cps18_raw$uhrsworkt <= 170),]
cps18$white <- ifelse(cps18$race == 100, 1, 0)
cps18$black <- ifelse(cps18$race == 200, 1, 0)
cps18$male <- ifelse(cps18$sex == 1, 1, 0)
cps18$female <- ifelse(cps18$sex == 2, 1, 0)
cps18$lninc <- log(cps18$incwage)
# what is the sd of lninc?
sd(cps18$lninc,na.rm=TRUE)
# this do-file studies the relationship or gender, race, and age
# with income in the united states, using the current population
# survey. it relies on nonparametric estimators.
# I will focus only on Black-white differences. If you are
# in other racial/ethnic groups, I encourage you to modify
# the do file in your spare time.
# input Stata file
library(haven)
cps18_raw <- read_dta("https://github.com/tvogl/econ121/raw/main/data/cps_18.dta")
summary(cps18_raw)
# tables of race and sex - note: Stata labels have been removed
table(cps18_raw$race) #100 is white, 200 is black
table(cps18_raw$sex) #1 is male, 2 is female
# from the summary() results above, we know incwage has many 0s.
# over 25% of sample has 0s! restrict to workers who work 40+ hrs/wk.
table(cps18$uhrsworkt) #997 and 999 are top codes
cps18 <- cps18_raw[which(cps18_raw$uhrsworkt >= 40 & cps18_raw$uhrsworkt <= 170),]
# cps18 is our analysis dataset, excluding people who work < 40 hours and
# people who are missing hours data
# generate white, black, male, female, log income (not hourly)
cps18$white <- ifelse(cps18$race == 100, 1, 0)
cps18$black <- ifelse(cps18$race == 200, 1, 0)
cps18$male <- ifelse(cps18$sex == 1, 1, 0)
cps18$female <- ifelse(cps18$sex == 2, 1, 0)
cps18$lninc <- log(cps18$incwage)
# what is the sd of lninc?
sd(cps18$lninc,na.rm=TRUE)
# kernel density estimates of log income by race and sex
# let's use .25 as the bandwidth, about a quarter of the sd of lninc.
# Libraries
library(tidyverse)
# library(hrbrthemes)
# library(dplyr)
# library(tidyr)
# library(viridis)
# The diamonds dataset is natively available with R.
# Without transparency (left)
p1 <- ggplot(data=cps18, aes(x=lninc, group=white, fill=white)) +
geom_density(adjust=1.5)
p1 <- ggplot(data=cps18, aes(x=lninc, group=white, fill=cut)) +
geom_density(adjust=1.5)
p1 <- ggplot(data=cps18, aes(x=lninc, group=cut, fill=cut)) +
geom_density(adjust=1.5)
p1
p1 <- ggplot(data=cps18, aes(x=lninc, group=white, fill=white)) +
geom_density(adjust=1.5)
p1
p1 <- ggplot(data=cps18, aes(x=lninc, group=white, fill=white)) +
geom_density(adjust=1.5, alpha=.4)
p1
p1 <- ggplot(data=cps18, aes(x=lninc)) +
geom_density(adjust=1.5, alpha=.4)
p1
p1 <- ggplot(data=cps18, aes(x=lninc)) +
geom_density(adjust=1.5)
p1
p1 <- ggplot(data=cps18, aes(x=lninc)) +
geom_density(bw=.25)
p1
cps18$racesex <- as.factor(ifelse(cps18$race == 200 & cps18$sex == 2, 'Black women',
ifelse(cps18$race == 100 & cps18$sex == 2, 'White women',
ifelse(cps18$race == 200 & cps18$sex == 1, 'Black men',
ifelse(cps18$race == 100 & cps18$sex == 1, 'White men')))))
cps18$racesex <- as.factor(ifelse(cps18$race == 200 & cps18$sex == 2, 'Black women',
ifelse(cps18$race == 100 & cps18$sex == 2, 'White women',
ifelse(cps18$race == 200 & cps18$sex == 1, 'Black men',
ifelse(cps18$race == 100 & cps18$sex == 1, 'White men', 'Other')))))
p1 <- ggplot(data=cps18, aes(x=lninc,group=racesex)) +
geom_density(bw=.25)
p1
cps18 <- cps18[which(cps18$race <=200),]
# generate white, black, male, female, log income (not hourly)
cps18$racesex <- as.factor(ifelse(cps18$race == 200 & cps18$sex == 2, 'Black women',
ifelse(cps18$race == 100 & cps18$sex == 2, 'White women',
ifelse(cps18$race == 200 & cps18$sex == 1, 'Black men',
ifelse(cps18$race == 100 & cps18$sex == 1, 'White men', 'Other')))))
p1 <- ggplot(data=cps18, aes(x=lninc,group=racesex)) +
geom_density(bw=.25)
p1
p1 <- ggplot(data=cps18, aes(x=lninc,group=racesex)) +
geom_density(bw=.25) +
theme(ipsum)
p1
library(viridis) $for colors
library(viridis) #for colors
p1 <- ggplot(data=cps18, aes(x=lninc,group=racesex)) +
geom_density(bw=.25) +
theme(ipsum)
p1
library(hrbrthemes) #for theme of graph
p1 <- ggplot(data=cps18, aes(x=lninc,group=racesex)) +
geom_density(bw=.25) +
theme(ipsum)
p1
p1 <- ggplot(data=cps18, aes(x=lninc,group=racesex)) +
geom_density(bw=.25) +
theme(ipsum)
p1
p1 <- ggplot(data=cps18, aes(x=lninc,group=racesex)) +
geom_density(bw=.25)
p1
p1 <- ggplot(data=cps18, aes(x=lninc,group=racesex,fill(racesex))) +
geom_density(bw=.25)
p1
p1 <- ggplot(data=cps18, aes(x=lninc,group=racesex,fill=racesex)) +
geom_density(bw=.25)
p1
p1 <- ggplot(data=cps18, aes(x=lninc,group=racesex,fill=racesex)) +
geom_density(bw=.25,alpha=.4) #alpha specifies the transparency of the colors
p1
ggplot(data=cps18, aes(x=lninc,group=racesex,fill=racesex)) +
geom_density(bw=.25,a
ggplot(data=cps18, aes(x=lninc,group=racesex,fill=racesex)) +
geom_density(bw=.25,alpha=.4) #alpha specifies the transparency of the colors
ggplot(data=cps18, aes(x=lninc,group=racesex,fill=racesex)) +
geom_density(bw=.25,alpha=.4) #alpha specifies the transparency of the colors
ggplot(data=cps18, aes(x=lninc,group=racesex,fill=racesex)) +
geom_density(bw=.1,alpha=.4) #alpha specifies the transparency of the colors
ggplot(data=cps18, aes(x=age, y= lninc)) +
geom_point() +
geom_smooth()
ggplot(data=cps18, aes(x=age, y= lninc)) +
geom_smooth()
ggplot(data=cps18, aes(x=age, y= lninc)) +
geom_smooth(se=FALSE)
ggplot(data=cps18, aes(x=age, y= lninc, group=racesex)) +
geom_smooth(se=FALSE)
ggplot(data=cps18, aes(x=age, y= lninc, group=racesex, fill=racesex)) +
geom_smooth(se=FALSE)
ggplot(data=cps18, aes(x=age, y= lninc, group=racesex, fill=racesex)) +
geom_smooth(method=loess,se=FALSE)
ggplot(data=cps18, aes(x=age, y= lninc, group=racesex, fill=racesex)) +
geom_smooth(method=stats::loess(lninc~age,data=cps18,span=1,degree=1),se=FALSE)
install.packages("KernSmooth")
library(KernSmooth)
model1 <- locpoly(x=age, y=lninc, bandwidth=1, degree=1)
model1 <- locpoly(x=cps18$age, y=cps18$lninc, bandwidth=1, degree=1)
model1 <- locpoly(x=cps18$age, y=cps18$lninc, bandwidth=1)
cps18 <- cps18[complete.cases(cps18$lninc), ]
model1 <- locpoly(x=cps18$age, y=cps18$lninc, bandwidth=1, degree=1)
cps18 <- na.omit(cps18)
cps18 <- cps18_raw[which(cps18_raw$uhrsworkt >= 40 & cps18_raw$uhrsworkt <= 170),]
cps18 <- cps18[which(cps18$race <=200),]
cps18 <- na.omit(cps18)
sd(nlsy79$lninc)
sd(cps18$lninc)
cps18new <- cps18[complete.cases(cps18$lninc), ]
cps18 <- cps18_raw[which(cps18_raw$uhrsworkt >= 40 & cps18_raw$uhrsworkt <= 170),]
# cps18 is our analysis dataset, excluding people who work < 40 hours and
# people who are missing hours data. let's also exclude non-black/white individuals
cps18 <- cps18[which(cps18$race <=200),]
# generate white, black, male, female, log income (not hourly)
cps18$racesex <- as.factor(ifelse(cps18$race == 200 & cps18$sex == 2, 'Black women',
ifelse(cps18$race == 100 & cps18$sex == 2, 'White women',
ifelse(cps18$race == 200 & cps18$sex == 1, 'Black men',
ifelse(cps18$race == 100 & cps18$sex == 1, 'White men', 'Other')))))
cps18$lninc <- log(cps18$incwage)
cps18_raw <- read_dta("https://github.com/tvogl/econ121/raw/main/data/cps_18.dta")
summary(cps18_raw)
# tables of race and sex - note: Stata labels have been removed
table(cps18_raw$race) #100 is white, 200 is black
table(cps18_raw$sex) #1 is male, 2 is female
# from the summary() results above, we know incwage has many 0s.
# over 25% of sample has 0s! restrict to workers who work 40+ hrs/wk.
table(cps18$uhrsworkt) #997 and 999 are top codes
cps18 <- cps18_raw[which(cps18_raw$uhrsworkt >= 40 & cps18_raw$uhrsworkt <= 170),]
# cps18 is our analysis dataset, excluding people who work < 40 hours and
# people who are missing hours data. let's also exclude non-black/white individuals
cps18 <- cps18[which(cps18$race <=200),]
# generate white, black, male, female, log income (not hourly)
cps18$racesex <- as.factor(ifelse(cps18$race == 200 & cps18$sex == 2, 'Black women',
ifelse(cps18$race == 100 & cps18$sex == 2, 'White women',
ifelse(cps18$race == 200 & cps18$sex == 1, 'Black men',
ifelse(cps18$race == 100 & cps18$sex == 1, 'White men', 'Other')))))
cps18$lninc <- log(cps18$incwage)
cps18new <- cps18[complete.cases(cps18$lninc), ]
is.na(cps18$lninc)
mean(cps18$lninc)
cps18_raw <- read_dta("https://github.com/tvogl/econ121/raw/main/data/cps_18.dta")
summary(cps18_raw)
# tables of race and sex - note: Stata labels have been removed
table(cps18_raw$race) #100 is white, 200 is black
table(cps18_raw$sex) #1 is male, 2 is female
# from the summary() results above, we know incwage has many 0s.
# over 25% of sample has 0s! restrict to workers who work 40+ hrs/wk.
table(cps18$uhrsworkt) #997 and 999 are top codes
cps18 <- cps18_raw[which(cps18_raw$uhrsworkt >= 40 & cps18_raw$uhrsworkt <= 170),]
# cps18 is our analysis dataset, excluding people who work < 40 hours and
# people who are missing hours data. let's also exclude non-black/white individuals
cps18 <- cps18[which(cps18$race <=200),]
cps18$racesex <- as.factor(ifelse(cps18$race == 200 & cps18$sex == 2, 'Black women',
ifelse(cps18$race == 100 & cps18$sex == 2, 'White women',
ifelse(cps18$race == 200 & cps18$sex == 1, 'Black men',
ifelse(cps18$race == 100 & cps18$sex == 1, 'White men', 'Other')))))
cps18 <- cps18[which(cps18$incwage > 0),]
cps18$lninc <- log(cps18$incwage)
sd(cps18$lninc)
model1 <- locpoly(x=cps18$age, y=cps18$lninc, bandwidth=1, degree=1)
plot(model1)
plot(model1,type(l))
plot(model1,type="l")
plot(model1,type="line")
plot(model1,type="l")
ggplot(data = m1, aes(x = x, y = y)) +
geom_line(color = "blue") +
theme_bw()
m1 <- data.frame(model1)
ggplot(data = m1, aes(x = x, y = y)) +
geom_line(color = "blue") +
theme_bw()
plot(model1,type="l")
ggplot(data = m1, aes(x = x, y = y)) +
geom_line(color = "blue") +
theme_bw()
ggplot(data = m1, aes(x = x, y = y)) +
geom_line(color = "blue")
ggplot(data = m1, aes(x = x, y = y)) +
geom_line()
library(haven)
nfhs_raw <- read_dta("https://github.com/tvogl/econ121/raw/main/data/nfhs4.dta")
# subset data to include only 20-80 year olds
nfhs <- nfhs_raw[which(nfhs_raw$age >= 20
& nfhs_raw$age <= 80),]
library(dplyr) #for collapsing by age
library(radiant.data) #for weighted sd function
nfhs_collapsed <- nfhs %>% group_by(age) %>%
summarize(mean=weighted.mean(assets,w=weight),
sd = weighted.sd(assets,w=weight),
n=n())
library(ggplot2) #for plots
library(ggpubr) #to combine plots
ggplot(nfhs_collapsed, aes(x=age, y=n)) + geom_point(shape=21)
ggplot(nfhs_collapsed, aes(x=age, y=n)) + geom_point()
plot1 <- ggplot(nfhs_collapsed, aes(x=age, y=mean, size=n)) +
geom_point(show.legend=FALSE)
plot2 <- ggplot(nfhs_collapsed, aes(x=age, y=sd), size=n) +
geom_point(show.legend=FALSE)
ggarrange(plot1, plot2, ncol = 1, nrow = 2)
# analysis of bacon consumption in the national health interview survey.
# open nhis dta and summarize.
library(haven)
nhis_raw <- read_dta("https://github.com/tvogl/econ121/raw/main/data/nhis2000.dta")
summary(nhis_raw)
# drop observations with bacon missing.
# generate a variable that equals one if any bacon consumption, zero otherwise.
nhis <- nhis_raw[!is.na(nhis_raw$bacon),]
table(nhis$bacon)
nhis$anybacon <- ifelse(nhis$bacon > 0, 1, 0)
# generate some covariates.
# gender.
table(nhis$sex)
nhis$male <- 2-nhis$sex
# marital status
table(nhis$marstat)
nhis$married <- ifelse(nhis$marstat < 20, 1, 0)
install.packages("glmx")
library(haven)
nhis_raw <- read_dta("https://github.com/tvogl/econ121/raw/main/data/nhis2000.dta")
table(nhis_raw$health)
nhis <- read_dta("https://github.com/tvogl/econ121/raw/main/data/nhis2000.dta")
summary(nhis)
table(nhis$age)
prop.table(nhis$age)
prop.table(table(nhis$age)
)
prop.table(table(nhis$health)) # prop.table converts frequencies into proportions
mean(nhis$sex)
table(nhis$sex)
prop.table(table(nhis$sex))
mean(nhis$sex)
weighted.mean(nhis$sex,w=sampweight) # 57% female
weighted.mean(nhis$sex,w = nhis$sampweight) # 57% female
poorhealth <- subset(nhis, fpoor==1, select=c(age, mort5))
notpoorhealth <- subset(nhis, fpoor==0, select=c(age, mort5))
library(KernSmooth)
poorreg <- data.frame(locpoly(x=poorhealth$age, y=poorhealth$mort5, bandwidth=1, degree=1))
notpoorreg <- data.frame(locpoly(x=notpoorhealth$age, y=notpoorhealth$mort5, bandwidth=1, degree=1))
ggplot() +
geom_line(data = poorreg, aes(x = x, y = y,color = "Fair/poor")) +
geom_line(data = notpoorreg, aes(x = x, y = y,color = "Good/Very Good/Excellent")) +
labs(x="age", y="mort5", color = "Legend") +
scale_color_manual(values = c("Fair/poor" = "black", "Good/Very Good/Excellent" = "grey"))
poorhealth <- subset(nhis, fpoor==1, select=c(age, mort5))
notpoorhealth <- subset(nhis, fpoor==0, select=c(age, mort5))
library(KernSmooth)
poorreg <- data.frame(locpoly(x=poorhealth$age, y=poorhealth$mort5, bandwidth=1, degree=1))
notpoorreg <- data.frame(locpoly(x=notpoorhealth$age, y=notpoorhealth$mort5, bandwidth=1, degree=1))
library(ggplot2)
ggplot() +
geom_line(data = poorreg, aes(x = x, y = y,color = "Fair/poor")) +
geom_line(data = notpoorreg, aes(x = x, y = y,color = "Good/Very Good/Excellent")) +
labs(x="age", y="mort5", color = "Legend") +
scale_color_manual(values = c("Fair/poor" = "black", "Good/Very Good/Excellent" = "grey"))
poorhealth <- subset(nhis, fpoor==1, select=c(age, mort5))
nhis$fpoor <- ifelse(nhis$health > 3, 1, 0)
poorhealth <- subset(nhis, fpoor==1, select=c(age, mort5))
notpoorhealth <- subset(nhis, fpoor==0, select=c(age, mort5))
library(KernSmooth)
poorreg <- data.frame(locpoly(x=poorhealth$age, y=poorhealth$mort5, bandwidth=1, degree=1))
notpoorreg <- data.frame(locpoly(x=notpoorhealth$age, y=notpoorhealth$mort5, bandwidth=1, degree=1))
library(ggplot2)
ggplot() +
geom_line(data = poorreg, aes(x = x, y = y,color = "Fair/poor")) +
geom_line(data = notpoorreg, aes(x = x, y = y,color = "Good/Very Good/Excellent")) +
labs(x="age", y="mort5", color = "Legend") +
scale_color_manual(values = c("Fair/poor" = "black", "Good/Very Good/Excellent" = "grey"))
poorhealth <- subset(nhis, fpoor==1 & !is.na(mort5), select=c(age, mort5))
notpoorhealth <- subset(nhis, fpoor==0 & !is.na(mort5), select=c(age, mort5))
library(KernSmooth)
poorreg <- data.frame(locpoly(x=poorhealth$age, y=poorhealth$mort5, bandwidth=1, degree=1))
notpoorreg <- data.frame(locpoly(x=notpoorhealth$age, y=notpoorhealth$mort5, bandwidth=1, degree=1))
library(ggplot2)
ggplot() +
geom_line(data = poorreg, aes(x = x, y = y,color = "Fair/poor")) +
geom_line(data = notpoorreg, aes(x = x, y = y,color = "Good/Very Good/Excellent")) +
labs(x="age", y="mort5", color = "Legend") +
scale_color_manual(values = c("Fair/poor" = "black", "Good/Very Good/Excellent" = "grey"))
# first stage local linear regression with rectangular kernel and bw = 0.2
library(dplyr)
library(haven)
romania <- read_dta("https://github.com/tvogl/econ121/raw/main/data/romania_schools.dta")
# variables in the dataset
ls(romania)
# distance = score - cutoff
# better = went to better school in town
# ptile = percentile on high school exit exam
# summarize distance to the town-specific cutoff
summary(romania$distance)
# graph of first stage relationship --> effect of being above town's cutoff on going to the better school
library(KernSmooth)
library(ggplot2)
romania_below <- subset(romania, distance < 0)
romania_above <- subset(romania, distance >= 0)
yhat_below <- data.frame(locpoly(x=romania_below$distance, y=romania_below$better, bandwidth=.2, degree=1))
yhat_above <- data.frame(locpoly(x=romania_above$distance, y=romania_above$better, bandwidth=.2, degree=1))
ggplot() +
geom_line(data = yhat_below, aes(x = x, y = y)) +
geom_line(data = yhat_above, aes(x = x, y = y)) +
labs(x="distance", y="pr[better school]")
# graph of reduced form relationship --> effect of being above town's cutoff on exit exam percentile
yhat_below <- data.frame(locpoly(x=romania_below$distance, y=romania_below$ptile, bandwidth=.2, degree=1))
yhat_above <- data.frame(locpoly(x=romania_above$distance, y=romania_above$ptile, bandwidth=.2, degree=1))
ggplot() +
geom_line(data = yhat_below, aes(x = x, y = y)) +
geom_line(data = yhat_above, aes(x = x, y = y)) +
labs(x="distance", y="exit exam percentile")
locpoly(x=romania_below$distance, y=romania_below$ptile, bandwidth=.2, degree=1)
rm(list=ls())
library(haven)
nlsy <- read_dta("https://github.com/tvogl/econ121/raw/main/data/nlsy_deming.dta")
# Decribe the data
summary(nlsy)
# Let's look at the structure of the panel data for a few key variables
nlsy <- nlsy[order(mom_id),] # sort by mom_id so siblings are next to each other
library(dplyr) # for glympse()
glimpse(nlsy)
# Birth weight is in logs, which is a little complicated to interpret
# Let's convert to a very low birth weight indicator, based on the 53 ounce threshold
nlsy$vlow_bw <- ifelse(exp(nlsy$lnbw) < 53, 1, 0)
# analysis of bacon consumption in the national health interview survey.
# open nhis dta and summarize.
library(haven)
nhis_raw <- read_dta("https://github.com/tvogl/econ121/raw/main/data/nhis2000.dta")
summary(nhis_raw)
# drop observations with bacon missing.
# generate a variable that equals one if any bacon consumption, zero otherwise.
nhis <- nhis_raw[!is.na(nhis_raw$bacon),]
table(nhis$bacon)
nhis$anybacon <- ifelse(nhis$bacon > 0, 1, 0)
# generate some covariates.
# gender.
table(nhis$sex)
nhis$male <- 2-nhis$sex
# marital status
table(nhis$marstat)
nhis$married <- ifelse(nhis$marstat < 20, 1, 0)
logit_model <- glm(anybacon ~ edyrs + age + male + black + hisp + other + married, data = nhis, family=binomial(link="logit"))
coeftest(logit_model, vcov = vcovHC(logit_model, type="HC2"))
library(lmtest)
coeftest(logit_model, vcov = vcovHC(logit_model, type="HC2"))
summary(logit_model)
library(sandwich)
coeftest(logit_model, vcov = vcovHC(logit_model, type="HC2"))
detach(sandwich)
detach("sandwich")
detach("package:sandwich", unload=TRUE)
ols_model <- lm(anybacon ~ edyrs + age + male + black + hisp + other + married,data = nhis)
coeftest(ols_model, vcov = vcovHC(logit_model, type="HC2"))
library(sandwich)
coeftest(logit_model, vcov = vcovHC(logit_model, type="HC2"))
# this R script analyzes data from romanian schools. the data include
# students who live in towns with two high schools. high school admissions
# are based on an entry exam. we will use the admissions cutoff to
# the town's better high school in a fuzzy regression discontinuity design.
library(haven)
romania <- read_dta("https://github.com/tvogl/econ121/raw/main/data/romania_schools.dta")
# variables in the dataset
ls(romania)
# distance = score - cutoff
# better = went to better school in town
# ptile = percentile on high school exit exam
# summarize distance to the town-specific cutoff
summary(romania$distance)
# graph of first stage relationship --> effect of being above town's cutoff on going to the better school
library(KernSmooth)
library(ggplot2)
romania_below <- subset(romania, distance < 0)
romania_above <- subset(romania, distance >= 0)
yhat_below <- data.frame(locpoly(x=romania_below$distance, y=romania_below$better, bandwidth=.2, degree=1))
yhat_above <- data.frame(locpoly(x=romania_above$distance, y=romania_above$better, bandwidth=.2, degree=1))
ggplot() +
geom_line(data = yhat_below, aes(x = x, y = y)) +
geom_line(data = yhat_above, aes(x = x, y = y)) +
labs(x="distance", y="pr[better school]")
yhat_below <- data.frame(locpoly(x=romania_below$distance, y=romania_below$ptile, bandwidth=.2, degree=1))
yhat_above <- data.frame(locpoly(x=romania_above$distance, y=romania_above$ptile, bandwidth=.2, degree=1))
ggplot() +
geom_line(data = yhat_below, aes(x = x, y = y)) +
geom_line(data = yhat_above, aes(x = x, y = y)) +
labs(x="distance", y="exit exam percentile")
